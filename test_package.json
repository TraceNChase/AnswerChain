#!/bin/bash
#
# GitHub CodeQL Action Setup Script
# Created: 2025-08-27 02:22:30 UTC
# Author: foolshopedemocrazy
#
# This script sets up GitHub CodeQL scanning for security vulnerability detection

echo "==================================================="
echo "   GitHub CodeQL Action Setup                      "
echo "   Date: 2025-08-27 02:22:30 UTC                  "
echo "   Author: foolshopedemocrazy                     "
echo "==================================================="

# Create directory structure
echo "Creating directory structure..."
mkdir -p .github/workflows
mkdir -p .github/codeql

# Create GitHub Actions workflow for CodeQL scanning
echo "Creating CodeQL GitHub Actions workflow..."
cat > .github/workflows/codeql-analysis.yml << 'EOF'
# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build steps.
name: "CodeQL Analysis"

on:
  push:
    branches: [ main, master ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0'  # Run at 00:00 every Sunday
  workflow_dispatch: # Allow manual triggering

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'python', 'java' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby', 'swift' ]
        # Learn more about CodeQL language support: https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: +security-extended,security-and-quality
        config-file: ./.github/codeql/codeql-config.yml
        
    # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java)
    # If this step fails, then you should remove it and run the build manually
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    # ✏️ If the Autobuild fails above, remove it and uncomment these lines
    #    to install dependencies and build manually.
    # For Java projects:
    # - if: matrix.language == 'java'
    #   name: Setup Java
    #   uses: actions/setup-java@v3
    #   with:
    #     distribution: 'temurin'
    #     java-version: 17
    # - if: matrix.language == 'java'
    #   run: |
    #     ./mvnw clean package -DskipTests
    
    # For Node.js projects:
    # - if: matrix.language == 'javascript'
    #   name: Setup Node
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: 18
    # - if: matrix.language == 'javascript'
    #   run: |
    #     npm ci
    #     npm run build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{ matrix.language }}"
EOF

# Create CodeQL configuration file
echo "Creating CodeQL configuration file..."
cat > .github/codeql/codeql-config.yml << 'EOF'
name: "CodeQL Configuration"

# Paths to exclude from analysis
paths-ignore:
  - '**/node_modules/**'
  - '**/dist/**'
  - '**/build/**'
  - '**/vendor/**'
  - '**/*.min.js'
  - '**/test/**'
  - '**/tests/**'
  - '**/*.test.js'
  - '**/*.spec.js'
  - '**/fixtures/**'
  - '**/__mocks__/**'

# Optional: Add custom queries
# queries:
#   - uses: security-extended
#   - uses: ./custom-queries/code-scanning  # Add your own custom queries

# Optional: Run additional security packs
# packs:
#   - codeql/java-security-and-quality
#   - codeql/cpp-security-extended

# Optional: Set specific query suite
query-filters:
  - include:
      tags contain:
        - security
        - correctness
  - exclude:
      tags contain:
        - too-few-results

# Optional: Configure database options
# database:
#   threads: 2
#   memory: 2048
EOF

# Create documentation file
echo "Creating CodeQL documentation..."
cat > CODEQL_README.md << 'EOF'
# GitHub CodeQL Security Scanning

This repository is configured with GitHub CodeQL, an enterprise-grade semantic code analysis engine used to identify vulnerabilities and errors in your code.

## What is CodeQL?

CodeQL is GitHub's static analysis engine that treats code as data, allowing you to find potential vulnerabilities using queries. It powers GitHub's code scanning feature and can detect:

- SQL injection
- Cross-site scripting (XSS)
- Buffer overflows
- Hard-coded credentials
- Path traversals
- And many other security issues

## How It's Configured

CodeQL is configured to run:
- On every push to main/master branches
- On every pull request to main/master
- Weekly scheduled scans (Sundays)
- On-demand through manual workflow triggers

## Languages Analyzed

The current configuration analyzes:
- JavaScript/TypeScript
- Python
- Java

Additional supported languages include:
- C/C++
- C#
- Go
- Ruby
- Swift

To modify the languages analyzed, edit the language matrix in `.github/workflows/codeql-analysis.yml`.

## Advanced Configuration

The CodeQL setup uses a configuration file at `.github/codeql/codeql-config.yml` that allows you to:

- Exclude paths from analysis
- Add custom queries
- Configure query suites and filters
- Set memory and threading options

## Requirements

- GitHub Advanced Security must be enabled for the repository
- Appropriate permissions for Actions and Security events

## Viewing Results

CodeQL analysis results appear in multiple locations:

1. **Security Tab**: Go to the Security tab in your repository and click on "Code scanning alerts"
2. **Pull Requests**: CodeQL findings appear as annotations in PR code reviews
3. **GitHub Actions**: Full logs are available in the Actions tab

## Customizing Analysis

### Custom Build Steps

If the automatic build fails, you can customize the build steps in the workflow file. Examples for Java and JavaScript projects are included as comments.

### Custom Queries

You can add custom CodeQL queries by:
1. Creating a directory for your queries (e.g., `.github/codeql/custom-queries`)
2. Adding your `.ql` query files
3. Referencing them in the configuration file

## Disabling Specific Rules

To disable specific CodeQL alerts:

1. Go to the specific alert in the Security tab
2. Click "Dismiss alert" and choose "Won't fix" or "False positive"

For systematic rule disabling, add query filters to the CodeQL configuration file.

## Additional Resources

- [CodeQL Documentation](https://codeql.github.com/docs/)
- [Supported Languages](https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/)
- [CodeQL Query Help](https://codeql.github.com/codeql-query-help/)
- [Custom Query Writing](https://codeql.github.com/docs/writing-codeql-queries/)
- [GitHub Advanced Security Documentation](https://docs.github.com/en/github/getting-started-with-github/about-github-advanced-security)
EOF

# Create language-specific config templates
echo "Creating language-specific configuration templates..."

# Java configuration
mkdir -p .github/codeql/language-templates
cat > .github/codeql/language-templates/java-config.yml << 'EOF'
# CodeQL Configuration for Java Projects

# Override the default queries
queries:
  - uses: security-and-quality
  - uses: security-extended

# Additional packs for Java
packs:
  - codeql/java-security-and-quality

paths-ignore:
  - '**/test/**'
  - '**/generated/**'
  - '**/target/**'

# Java-specific database options
database:
  threads: 2
  memory: 4096
  build-command: ./mvnw clean package -DskipTests
EOF

# JavaScript/TypeScript configuration
cat > .github/codeql/language-templates/javascript-config.yml << 'EOF'
# CodeQL Configuration for JavaScript/TypeScript Projects

queries:
  - uses: security-and-quality
  - uses: security-extended

paths-ignore:
  - '**/node_modules/**'
  - '**/dist/**'
  - '**/build/**'
  - '**/coverage/**'
  - '**/*.min.js'
  - '**/vendor/**'
  - '**/test/**'
  - '**/__mocks__/**'

# JavaScript/TypeScript specific settings
javascript:
  extractor:
    javascript:
      typescript: true

database:
  threads: 2
  memory: 2048
EOF

# Python configuration
cat > .github/codeql/language-templates/python-config.yml << 'EOF'
# CodeQL Configuration for Python Projects

queries:
  - uses: security-and-quality
  - uses: security-extended

paths-ignore:
  - '**/venv/**'
  - '**/env/**'
  - '**/tests/**'
  - '**/.venv/**'
  - '**/virtualenv/**'
  - '**/setuptools/**'
  - '**/pip/**'

# Python-specific database options
database:
  threads: 2
  memory: 2048
  python:
    setup:
      requirements_files: requirements.txt
EOF

echo "=========================================================="
echo "GitHub CodeQL Action setup completed successfully!"
echo "=========================================================="
echo ""
echo "The following files have been created:"
echo "- .github/workflows/codeql-analysis.yml (GitHub Actions workflow)"
echo "- .github/codeql/codeql-config.yml (CodeQL configuration)"
echo "- CODEQL_README.md (Documentation)"
echo "- .github/codeql/language-templates/ (Language-specific templates)"
echo ""
echo "Next steps:"
echo "1. Ensure GitHub Advanced Security is enabled for your repository"
echo "   (Settings → Security & analysis → GitHub Advanced Security)"
echo "2. Customize the languages analyzed in .github/workflows/codeql-analysis.yml"
echo "3. Review and update the CodeQL configuration if needed"
echo "4. Commit the files to your repository"
echo ""
echo "For detailed information, see the CODEQL_README.md file."
echo ""
echo "Note: If your project uses compiled languages (C/C++, Java, etc.),"
echo "you might need to customize the build steps in the workflow file."
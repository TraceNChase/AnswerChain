{
  "timestamp": "2025-09-10T00:30:52.828505",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "component": "SYSTEM",
  "level": "INFO",
  "message": "Start new run",
  "details": {
    "event": "Run Initialization"
  }
}
{
  "timestamp": "2025-09-10T00:31:17.824583",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "GENERAL",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "User int input valid: 3",
  "details": {}
}
{
  "timestamp": "2025-09-10T00:31:32.520816",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "Counts computed for kit build.",
  "details": {
    "total_correct": 42,
    "total_alternatives": 93,
    "total_incorrect": 51
  }
}
{
  "timestamp": "2025-09-10T00:31:36.342775",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "Base64 length bounds computed for pad selection.",
  "details": {
    "real_len": 88,
    "decoy_count": 3,
    "max_len": 92
  }
}
{
  "timestamp": "2025-09-10T00:31:45.233221",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "GENERAL",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "Using PAD size (bucketized): 128",
  "details": {}
}
{
  "timestamp": "2025-09-10T00:31:49.498449",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "GENERAL",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "User int input valid: 1",
  "details": {}
}
{
  "timestamp": "2025-09-10T00:31:50.793580",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "GENERAL",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "User int input valid: 1",
  "details": {}
}
{
  "timestamp": "2025-09-10T00:31:51.875941",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "GENERAL",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "User int input valid: 1",
  "details": {}
}
{
  "timestamp": "2025-09-10T00:31:51.877451",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "Argon2id parameters confirmed for kit.",
  "details": {
    "time_cost": 1,
    "memory_cost": 1,
    "parallelism": 1
  }
}
{
  "timestamp": "2025-09-10T00:31:51.878459",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "WARNING",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "Combinatorial hardness below policy threshold.",
  "details": {
    "bits": 21.12504673898166,
    "N": 93,
    "C": 42,
    "T": 16,
    "policy_min_bits": 80.0
  }
}
{
  "timestamp": "2025-09-10T00:31:53.927507",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "Combinatorial hardness evaluation complete.",
  "details": {
    "bits": 21.12504673898166,
    "N": 93,
    "C": 42,
    "T": 16
  }
}
{
  "timestamp": "2025-09-10T00:31:53.929506",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "sss_split() via node-bridge",
  "details": {
    "secret_len": 88,
    "shares": 42,
    "threshold": 16,
    "pad": 128
  }
}
{
  "timestamp": "2025-09-10T00:31:54.224876",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "sss_split() complete.",
  "details": {
    "share_len": 129,
    "xcoords": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42
    ],
    "sample_share_hashes": [
      "14f4588f1ce52aa68d03a458d16fa86b115ddf08e32bf664034e7be5440015a9",
      "5d3fd66f23d86597f54f86cf583aca43b76d413d3a89f97b6facf9345e8b11b7",
      "10db633fab5bac5e70003ccc3580a9793c43ea50bdb52432efdb58aa2ebd603b"
    ]
  }
}
{
  "timestamp": "2025-09-10T00:31:54.226876",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "sss_split() via node-bridge",
  "details": {
    "secret_len": 88,
    "shares": 93,
    "threshold": 1,
    "pad": 128
  }
}
{
  "timestamp": "2025-09-10T00:31:54.292945",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "sss_split() complete.",
  "details": {
    "share_len": 129,
    "xcoords": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      84,
      85,
      86,
      87,
      88,
      89,
      90,
      91,
      92,
      93
    ],
    "sample_share_hashes": [
      "eb74e79b2c49c3d8197746ce13e002d754f7c3397e5dee027b4b1e4b5ca2ab75",
      "df19b4ac6fba6bb0d273703141277df991a361978079f3625a61eb34a5bed467",
      "4da75a6640718dd36e7407783b1954ec4aa89a42a119f4da9291129e0fab159f"
    ]
  }
}
{
  "timestamp": "2025-09-10T00:31:54.294946",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "sss_split() via node-bridge",
  "details": {
    "secret_len": 88,
    "shares": 93,
    "threshold": 16,
    "pad": 128
  }
}
{
  "timestamp": "2025-09-10T00:31:54.840917",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "sss_split() complete.",
  "details": {
    "share_len": 129,
    "xcoords": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      84,
      85,
      86,
      87,
      88,
      89,
      90,
      91,
      92,
      93
    ],
    "sample_share_hashes": [
      "4be96d2893145f97a1c1eaaf5addc0d841c7281061caf6528002b526b183f424",
      "16c114293431ed750ff7271b54a279291797b83565c2d4d4335e88612805acef",
      "8bbf4dbcaad1ff456fb5f77d26d8c3a883c88576302eab8aa21865488d327c5c"
    ]
  }
}
{
  "timestamp": "2025-09-10T00:31:54.841918",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "sss_split() via node-bridge",
  "details": {
    "secret_len": 92,
    "shares": 93,
    "threshold": 16,
    "pad": 128
  }
}
{
  "timestamp": "2025-09-10T00:31:55.393283",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "sss_split() complete.",
  "details": {
    "share_len": 129,
    "xcoords": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      84,
      85,
      86,
      87,
      88,
      89,
      90,
      91,
      92,
      93
    ],
    "sample_share_hashes": [
      "ecf10a36c55ac8983ad00680ae2fe7517e3dfc53cae95e7c2bb35fc251e8bd6f",
      "1d21590eed032e8bb93f6cc97e59f8c7791c961e63324dbe5380078af20bf7fc",
      "ea22a08719483551d3018e0ea8e2e77fd129644c957e6957d3ef7dd6e3570b14"
    ]
  }
}
{
  "timestamp": "2025-09-10T00:31:57.032566",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "Using user-provided password='Rex' (raw).",
  "details": {}
}
{
  "timestamp": "2025-09-10T00:31:57.033567",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "INFO",
  "component": "CRYPTO",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_debug",
    "line": 238
  },
  "message": "Starting Argon2id KDF (Noble). pass='Rex', salt(b64)='sYjvCfn/BuN4okaXASF07A=='",
  "details": {}
}
{
  "timestamp": "2025-09-10T00:31:57.139594",
  "run_id": "0c7d9537-9dc1-49b0-b1b2-8f3d6da0ced5",
  "level": "ERROR",
  "component": "GENERAL",
  "caller": {
    "file": "debug_utils.py",
    "function": "log_exception",
    "line": 286
  },
  "message": "Error during encrypted kit preparation",
  "details": {
    "exception_type": "RuntimeError",
    "exception_str": "bridge error: memory should be at least 8*p bytes",
    "traceback": "Traceback (most recent call last):\n  File \"C:\\Users\\deskt\\Desktop\\Project_SECQ_CLI\\AnswerChain\\src\\main.py\", line 510, in setup_phase\n    kit = save_questions(manual_questions)  # returns kit after building; handles save prompt\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\deskt\\Desktop\\Project_SECQ_CLI\\AnswerChain\\src\\main.py\", line 1013, in save_questions\n    per_alt_block[\"s0\"] = _enc_one_share(real_share, q_hash, alt_text, alg_choice)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\deskt\\Desktop\\Project_SECQ_CLI\\AnswerChain\\src\\main.py\", line 984, in _enc_one_share\n    key = _derive_answer_key(alt_text, salt, arg_time, arg_mem, arg_par)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\deskt\\Desktop\\Project_SECQ_CLI\\AnswerChain\\src\\main.py\", line 333, in _derive_answer_key\n    key, _ = CF.derive_or_recover_key(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\deskt\\Desktop\\Project_SECQ_CLI\\AnswerChain\\src\\CipherForge.py\", line 269, in derive_or_recover_key\n    key = derive_key_argon2id(\n          ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\deskt\\Desktop\\Project_SECQ_CLI\\AnswerChain\\src\\CipherForge.py\", line 80, in derive_key_argon2id\n    derived_bytes = argon2id(\n                    ^^^^^^^^^\n  File \"C:\\Users\\deskt\\Desktop\\Project_SECQ_CLI\\AnswerChain\\src\\modules\\crypto_bridge.py\", line 67, in argon2id\n    resp = _call({\n           ^^^^^^^\n  File \"C:\\Users\\deskt\\Desktop\\Project_SECQ_CLI\\AnswerChain\\src\\modules\\crypto_bridge.py\", line 61, in _call\n    raise RuntimeError(f\"bridge error: {resp.get('error')}\")\nRuntimeError: bridge error: memory should be at least 8*p bytes\n"
  }
}

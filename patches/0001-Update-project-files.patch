From 495b5586cb81008bec485110a6a9fe916dbaf516 Mon Sep 17 00:00:00 2001
From: foolshopedemocrazy <philip.bargh.3027@student.uu.se>
Date: Wed, 27 Aug 2025 17:46:23 +0200
Subject: [PATCH] Update project files

---
 .github/codeql/config/cpp.yml             |  21 +
 .github/codeql/config/go.yml              |  15 +
 .github/codeql/config/javascript.yml      |  22 +-
 .github/codeql/config/python.yml          |  25 +-
 .github/codeql/queries/cpp/cpp-custom.qls |   2 +
 .github/codeql/queries/cpp/noop.ql        |   4 +
 .github/codeql/queries/go/go-custom.qls   |   2 +
 .github/codeql/queries/go/noop.ql         |   4 +
 .github/dependabot.yml                    |  13 +-
 .github/workflows/codeql.yml              | 116 ++--
 deploy-codeql-enhanced.ps1                | 317 ++++++++++
 setup_codeql.sh                           | 690 ++++++----------------
 12 files changed, 632 insertions(+), 599 deletions(-)
 create mode 100644 .github/codeql/config/cpp.yml
 create mode 100644 .github/codeql/config/go.yml
 create mode 100644 .github/codeql/queries/cpp/cpp-custom.qls
 create mode 100644 .github/codeql/queries/cpp/noop.ql
 create mode 100644 .github/codeql/queries/go/go-custom.qls
 create mode 100644 .github/codeql/queries/go/noop.ql
 create mode 100644 deploy-codeql-enhanced.ps1

diff --git a/.github/codeql/config/cpp.yml b/.github/codeql/config/cpp.yml
new file mode 100644
index 00000000..c76c224e
--- /dev/null
+++ b/.github/codeql/config/cpp.yml
@@ -0,0 +1,21 @@
+name: "CodeQL C/C++ Configuration"
+
+queries:
+  - uses: security-extended
+  - uses: security-and-quality
+
+paths:
+  - "**/*.c"
+  - "**/*.cpp"
+  - "**/*.cc"
+  - "**/*.cxx"
+  - "**/*.h"
+  - "**/*.hpp"
+
+paths-ignore:
+  - "build"
+  - "vendor"
+  - "third_party"
+  - "**/*.generated.*"
+
+disable-default-path-filters: true
diff --git a/.github/codeql/config/go.yml b/.github/codeql/config/go.yml
new file mode 100644
index 00000000..dcc80246
--- /dev/null
+++ b/.github/codeql/config/go.yml
@@ -0,0 +1,15 @@
+name: "CodeQL Go Configuration"
+
+queries:
+  - uses: security-extended
+  - uses: security-and-quality
+
+paths:
+  - "**/*.go"
+
+paths-ignore:
+  - "vendor"
+  - "**/*_test.go"
+  - "**/*.pb.go"
+
+disable-default-path-filters: true
diff --git a/.github/codeql/config/javascript.yml b/.github/codeql/config/javascript.yml
index a936f820..ff22e48f 100644
--- a/.github/codeql/config/javascript.yml
+++ b/.github/codeql/config/javascript.yml
@@ -5,34 +5,20 @@ queries:
   - uses: security-and-quality
 
 paths:
-  - "src"
-  - "app"
-  - "lib" 
-  - "services"
-  - "components"
-  - "utils"
-  - "scripts"
   - "**/*.js"
-  - "**/*.jsx"  
+  - "**/*.jsx"
   - "**/*.ts"
   - "**/*.tsx"
   - "**/*.mjs"
 
 paths-ignore:
+  - "node_modules"
   - "test"
   - "tests"
-  - "__tests__"
   - "**/*.test.*"
   - "**/*.spec.*"
-  - "node_modules"
-  - "dist"
-  - "build" 
-  - "coverage"
-  - "vendor"
-  - "third_party"
-  - "**/*.generated.*"
   - "**/*.min.js"
-  - "docs"
-  - "*.md"
+  - "dist"
+  - "build"
 
 disable-default-path-filters: true
diff --git a/.github/codeql/config/python.yml b/.github/codeql/config/python.yml
index 9d74ae5d..cbcdc329 100644
--- a/.github/codeql/config/python.yml
+++ b/.github/codeql/config/python.yml
@@ -1,39 +1,20 @@
 name: "CodeQL Python Configuration"
 
 queries:
-  - uses: security-extended  
+  - uses: security-extended
   - uses: security-and-quality
 
 paths:
-  - "src"
-  - "app" 
-  - "lib"
-  - "services"
-  - "modules"
-  - "scripts"
-  - "utils"
   - "**/*.py"
 
 paths-ignore:
   - "test"
   - "tests"
-  - "__pycache__"
   - "**/*_test.py"
-  - "**/*_tests.py"
   - "**/test_*.py"
   - "venv"
-  - "env"
   - ".venv"
-  - ".env"
-  - "build"
-  - "dist"
-  - "*.egg-info"
-  - "**/__pycache__/**"
-  - "vendor"
-  - "third_party"
-  - "**/*.generated.*"
-  - "**/migrations/**"
-  - "docs"
-  - "*.md"
+  - "__pycache__"
+  - "**/*.egg-info"
 
 disable-default-path-filters: true
diff --git a/.github/codeql/queries/cpp/cpp-custom.qls b/.github/codeql/queries/cpp/cpp-custom.qls
new file mode 100644
index 00000000..83cc2e9e
--- /dev/null
+++ b/.github/codeql/queries/cpp/cpp-custom.qls
@@ -0,0 +1,2 @@
+- queries:
+  - noop.ql
diff --git a/.github/codeql/queries/cpp/noop.ql b/.github/codeql/queries/cpp/noop.ql
new file mode 100644
index 00000000..917a215a
--- /dev/null
+++ b/.github/codeql/queries/cpp/noop.ql
@@ -0,0 +1,4 @@
+import cpp
+from Expr e
+where false
+select e, "No-op test query."
diff --git a/.github/codeql/queries/go/go-custom.qls b/.github/codeql/queries/go/go-custom.qls
new file mode 100644
index 00000000..83cc2e9e
--- /dev/null
+++ b/.github/codeql/queries/go/go-custom.qls
@@ -0,0 +1,2 @@
+- queries:
+  - noop.ql
diff --git a/.github/codeql/queries/go/noop.ql b/.github/codeql/queries/go/noop.ql
new file mode 100644
index 00000000..883ac162
--- /dev/null
+++ b/.github/codeql/queries/go/noop.ql
@@ -0,0 +1,4 @@
+import go
+from Expr e
+where false
+select e, "No-op test query."
diff --git a/.github/dependabot.yml b/.github/dependabot.yml
index d819ab15..5829e076 100644
--- a/.github/dependabot.yml
+++ b/.github/dependabot.yml
@@ -8,7 +8,7 @@ updates:
     labels:
       - "dependencies"
       - "security"
-  
+
   - package-ecosystem: "npm"
     directory: "/"
     schedule:
@@ -18,6 +18,15 @@ updates:
       - "dependencies"
       - "security"
 
+  - package-ecosystem: "gomod"
+    directory: "/"
+    schedule:
+      interval: "weekly"
+    open-pull-requests-limit: 10
+    labels:
+      - "dependencies"
+      - "security"
+
   - package-ecosystem: "composer"
     directory: "/"
     schedule:
@@ -26,7 +35,7 @@ updates:
     labels:
       - "dependencies"
       - "security"
-  
+
   - package-ecosystem: "github-actions"
     directory: "/"
     schedule:
diff --git a/.github/workflows/codeql.yml b/.github/workflows/codeql.yml
index 0fe8532e..c2ee0050 100644
--- a/.github/workflows/codeql.yml
+++ b/.github/workflows/codeql.yml
@@ -1,58 +1,58 @@
-# PowerShell script to implement CodeQL auto-detection
-
-Write-Host "Implementing CodeQL Auto-Detection..." -ForegroundColor Green
-
-# Navigate to project directory
-Set-Location "C:\Users\deskt\Desktop\Project_SECQ_CLI\SECQ_CLI"
-
-# Show current status
-Write-Host "`nCurrent git status:" -ForegroundColor Yellow
-git status
-
-# Replace the workflow file with auto-detection version
-Write-Host "`nUpdating .github/workflows/codeql.yml with auto-detection..." -ForegroundColor Green
-# (You'll need to manually replace the content with the auto-detection version above)
-
-# Remove unnecessary language-specific config files
-Write-Host "`nRemoving language-specific config files..." -ForegroundColor Green
-
-if (Test-Path .github/codeql/config/javascript.yml) {
-    git rm .github/codeql/config/javascript.yml
-    Write-Host "Removed javascript.yml"
-}
-
-if (Test-Path .github/codeql/config/python.yml) {
-    git rm .github/codeql/config/python.yml  
-    Write-Host "Removed python.yml"
-}
-
-if (Test-Path .github/codeql/config/java.yml) {
-    git rm .github/codeql/config/java.yml
-    Write-Host "Removed java.yml"
-}
-
-# Check if config directory is empty and remove if so
-$configFiles = Get-ChildItem .github/codeql/config/ -File 2>$null
-if ($configFiles.Count -eq 0) {
-    Write-Host "Config directory is empty, removing it..."
-    git rm -r .github/codeql/config/
-}
-
-# Stage all changes
-Write-Host "`nStaging changes..." -ForegroundColor Green
-git add -A
-
-# Show what will be committed
-Write-Host "`nChanges to be committed:" -ForegroundColor Yellow
-git status --staged
-
-# Commit changes
-Write-Host "`nCommitting changes..." -ForegroundColor Green
-git commit -m "Implement CodeQL auto-detection: remove language-specific configs"
-
-# Push to GitHub
-Write-Host "`nPushing to GitHub..." -ForegroundColor Green
-git push origin main
-
-Write-Host "`nAuto-detection implementation complete!" -ForegroundColor Green
-Write-Host "CodeQL will now automatically detect and scan all supported languages in your repository." -ForegroundColor Cyan
\ No newline at end of file
+name: "CodeQL Security Analysis"
+
+on:
+  push:
+    branches: ["main", "master", "develop"]
+    paths-ignore:
+      - '**/*.md'
+      - 'docs/**'
+  pull_request:
+    branches: ["main", "master", "develop"]
+    paths-ignore:
+      - '**/*.md'
+      - 'docs/**'
+  schedule:
+    - cron: '14 3 * * 1'
+  workflow_dispatch:
+
+permissions:
+  contents: read
+  security-events: write
+  actions: read
+
+concurrency:
+  group: codeql-${{ github.ref }}
+  cancel-in-progress: true
+
+jobs:
+  analyze:
+    name: Analyze (${{ matrix.language }})
+    runs-on: ubuntu-latest
+    timeout-minutes: 45
+
+    strategy:
+      fail-fast: false
+      matrix:
+        language:
+          - javascript
+          - python
+          - go
+          - cpp
+
+    steps:
+      - name: Checkout repository
+        uses: actions/checkout@v4
+
+      - name: Initialize CodeQL
+        uses: github/codeql-action/init@v3
+        with:
+          languages: ${{ matrix.language }}
+          config-file: ./.github/codeql/config/${{ matrix.language }}.yml
+
+      - name: Autobuild
+        uses: github/codeql-action/autobuild@v3
+
+      - name: Perform CodeQL Analysis
+        uses: github/codeql-action/analyze@v3
+        with:
+          category: "/language:${{ matrix.language }}"
diff --git a/deploy-codeql-enhanced.ps1 b/deploy-codeql-enhanced.ps1
new file mode 100644
index 00000000..59dfe469
--- /dev/null
+++ b/deploy-codeql-enhanced.ps1
@@ -0,0 +1,317 @@
+# CodeQL Enhanced Security Configuration Deployment Script (PowerShell)
+# Deploys complete CodeQL setup with support for JavaScript, Python, Go, and C/C++
+
+Write-Host "üöÄ Starting CodeQL Enhanced Security Configuration Deployment..." -ForegroundColor Green
+Write-Host "‚ö†Ô∏è  This will overwrite existing CodeQL configurations" -ForegroundColor Yellow
+
+# Base directory (relative to repository root)
+$BASE_DIR = ".github"
+
+# Create directory structure
+Write-Host "üìÅ Creating directory structure..." -ForegroundColor Cyan
+New-Item -ItemType Directory -Force -Path "$BASE_DIR\workflows" | Out-Null
+New-Item -ItemType Directory -Force -Path "$BASE_DIR\codeql\config" | Out-Null
+New-Item -ItemType Directory -Force -Path "$BASE_DIR\codeql\queries\javascript" | Out-Null
+New-Item -ItemType Directory -Force -Path "$BASE_DIR\codeql\queries\python" | Out-Null
+New-Item -ItemType Directory -Force -Path "$BASE_DIR\codeql\queries\go" | Out-Null
+New-Item -ItemType Directory -Force -Path "$BASE_DIR\codeql\queries\cpp" | Out-Null
+
+# ===== MAIN WORKFLOW =====
+Write-Host "üìù Creating main CodeQL workflow..." -ForegroundColor Cyan
+@'
+name: "CodeQL Security Analysis"
+
+on:
+  push:
+    branches: ["main", "master", "develop"]
+    paths-ignore:
+      - '**/*.md'
+      - 'docs/**'
+  pull_request:
+    branches: ["main", "master", "develop"]
+    paths-ignore:
+      - '**/*.md'
+      - 'docs/**'
+  schedule:
+    - cron: '14 3 * * 1'
+  workflow_dispatch:
+
+permissions:
+  contents: read
+  security-events: write
+  actions: read
+
+concurrency:
+  group: codeql-${{ github.ref }}
+  cancel-in-progress: true
+
+jobs:
+  analyze:
+    name: Analyze (${{ matrix.language }})
+    runs-on: ubuntu-latest
+    timeout-minutes: 45
+
+    strategy:
+      fail-fast: false
+      matrix:
+        language:
+          - javascript
+          - python
+          - go
+          - cpp
+
+    steps:
+      - name: Checkout repository
+        uses: actions/checkout@v4
+
+      - name: Initialize CodeQL
+        uses: github/codeql-action/init@v3
+        with:
+          languages: ${{ matrix.language }}
+          config-file: ./.github/codeql/config/${{ matrix.language }}.yml
+
+      - name: Autobuild
+        uses: github/codeql-action/autobuild@v3
+
+      - name: Perform CodeQL Analysis
+        uses: github/codeql-action/analyze@v3
+        with:
+          category: "/language:${{ matrix.language }}"
+'@ | Set-Content -Path "$BASE_DIR\workflows\codeql.yml" -Encoding UTF8
+
+# ===== JAVASCRIPT CONFIG =====
+Write-Host "üìù Creating JavaScript configuration..." -ForegroundColor Cyan
+@'
+name: "CodeQL JavaScript Configuration"
+
+queries:
+  - uses: security-extended
+  - uses: security-and-quality
+
+paths:
+  - "**/*.js"
+  - "**/*.jsx"
+  - "**/*.ts"
+  - "**/*.tsx"
+  - "**/*.mjs"
+
+paths-ignore:
+  - "node_modules"
+  - "test"
+  - "tests"
+  - "**/*.test.*"
+  - "**/*.spec.*"
+  - "**/*.min.js"
+  - "dist"
+  - "build"
+
+disable-default-path-filters: true
+'@ | Set-Content -Path "$BASE_DIR\codeql\config\javascript.yml" -Encoding UTF8
+
+# ===== PYTHON CONFIG =====
+Write-Host "üìù Creating Python configuration..." -ForegroundColor Cyan
+@'
+name: "CodeQL Python Configuration"
+
+queries:
+  - uses: security-extended
+  - uses: security-and-quality
+
+paths:
+  - "**/*.py"
+
+paths-ignore:
+  - "test"
+  - "tests"
+  - "**/*_test.py"
+  - "**/test_*.py"
+  - "venv"
+  - ".venv"
+  - "__pycache__"
+  - "**/*.egg-info"
+
+disable-default-path-filters: true
+'@ | Set-Content -Path "$BASE_DIR\codeql\config\python.yml" -Encoding UTF8
+
+# ===== GO CONFIG =====
+Write-Host "üìù Creating Go configuration..." -ForegroundColor Cyan
+@'
+name: "CodeQL Go Configuration"
+
+queries:
+  - uses: security-extended
+  - uses: security-and-quality
+
+paths:
+  - "**/*.go"
+
+paths-ignore:
+  - "vendor"
+  - "**/*_test.go"
+  - "**/*.pb.go"
+
+disable-default-path-filters: true
+'@ | Set-Content -Path "$BASE_DIR\codeql\config\go.yml" -Encoding UTF8
+
+# ===== C/C++ CONFIG =====
+Write-Host "üìù Creating C/C++ configuration..." -ForegroundColor Cyan
+@'
+name: "CodeQL C/C++ Configuration"
+
+queries:
+  - uses: security-extended
+  - uses: security-and-quality
+
+paths:
+  - "**/*.c"
+  - "**/*.cpp"
+  - "**/*.cc"
+  - "**/*.cxx"
+  - "**/*.h"
+  - "**/*.hpp"
+
+paths-ignore:
+  - "build"
+  - "vendor"
+  - "third_party"
+  - "**/*.generated.*"
+
+disable-default-path-filters: true
+'@ | Set-Content -Path "$BASE_DIR\codeql\config\cpp.yml" -Encoding UTF8
+
+# ===== NO-OP QUERIES =====
+Write-Host "üìù Creating placeholder queries..." -ForegroundColor Cyan
+
+# JavaScript queries
+@'
+import javascript
+from Expr e
+where false
+select e, "No-op test query."
+'@ | Set-Content -Path "$BASE_DIR\codeql\queries\javascript\noop.ql" -Encoding UTF8
+
+@'
+- queries:
+  - noop.ql
+'@ | Set-Content -Path "$BASE_DIR\codeql\queries\javascript\javascript-custom.qls" -Encoding UTF8
+
+# Python queries
+@'
+import python
+from Expr e
+where false
+select e, "No-op test query."
+'@ | Set-Content -Path "$BASE_DIR\codeql\queries\python\noop.ql" -Encoding UTF8
+
+@'
+- queries:
+  - noop.ql
+'@ | Set-Content -Path "$BASE_DIR\codeql\queries\python\python-custom.qls" -Encoding UTF8
+
+# Go queries
+@'
+import go
+from Expr e
+where false
+select e, "No-op test query."
+'@ | Set-Content -Path "$BASE_DIR\codeql\queries\go\noop.ql" -Encoding UTF8
+
+@'
+- queries:
+  - noop.ql
+'@ | Set-Content -Path "$BASE_DIR\codeql\queries\go\go-custom.qls" -Encoding UTF8
+
+# C++ queries
+@'
+import cpp
+from Expr e
+where false
+select e, "No-op test query."
+'@ | Set-Content -Path "$BASE_DIR\codeql\queries\cpp\noop.ql" -Encoding UTF8
+
+@'
+- queries:
+  - noop.ql
+'@ | Set-Content -Path "$BASE_DIR\codeql\queries\cpp\cpp-custom.qls" -Encoding UTF8
+
+# ===== UPDATE DEPENDABOT (preserving existing but adding gomod) =====
+Write-Host "üìù Updating Dependabot configuration..." -ForegroundColor Cyan
+@'
+version: 2
+updates:
+  - package-ecosystem: "pip"
+    directory: "/"
+    schedule:
+      interval: "weekly"
+    open-pull-requests-limit: 10
+    labels:
+      - "dependencies"
+      - "security"
+
+  - package-ecosystem: "npm"
+    directory: "/"
+    schedule:
+      interval: "weekly"
+    open-pull-requests-limit: 10
+    labels:
+      - "dependencies"
+      - "security"
+
+  - package-ecosystem: "gomod"
+    directory: "/"
+    schedule:
+      interval: "weekly"
+    open-pull-requests-limit: 10
+    labels:
+      - "dependencies"
+      - "security"
+
+  - package-ecosystem: "composer"
+    directory: "/"
+    schedule:
+      interval: "weekly"
+    open-pull-requests-limit: 10
+    labels:
+      - "dependencies"
+      - "security"
+
+  - package-ecosystem: "github-actions"
+    directory: "/"
+    schedule:
+      interval: "weekly"
+    open-pull-requests-limit: 5
+    labels:
+      - "dependencies"
+      - "security"
+'@ | Set-Content -Path "$BASE_DIR\dependabot.yml" -Encoding UTF8
+
+# ===== VERIFICATION =====
+Write-Host ""
+Write-Host "‚úÖ CodeQL Enhanced Security Configuration deployed successfully!" -ForegroundColor Green
+Write-Host ""
+Write-Host "üìã Created/Updated files:" -ForegroundColor Yellow
+Write-Host "  - $BASE_DIR\workflows\codeql.yml"
+Write-Host "  - $BASE_DIR\codeql\config\javascript.yml"
+Write-Host "  - $BASE_DIR\codeql\config\python.yml"
+Write-Host "  - $BASE_DIR\codeql\config\go.yml"
+Write-Host "  - $BASE_DIR\codeql\config\cpp.yml"
+Write-Host "  - Query files for all languages"
+Write-Host "  - $BASE_DIR\dependabot.yml (updated with gomod)"
+Write-Host ""
+Write-Host "üîç Configured languages:" -ForegroundColor Yellow
+Write-Host "  - JavaScript/TypeScript"
+Write-Host "  - Python"
+Write-Host "  - Go"
+Write-Host "  - C/C++"
+Write-Host ""
+Write-Host "üìå Next steps:" -ForegroundColor Cyan
+Write-Host "  1. Review the configurations"
+Write-Host "  2. Remove old Java config: Remove-Item .github\codeql\config\java.yml -Force"
+Write-Host "  3. Commit changes: git add .github/ && git commit -m 'Enhanced CodeQL security configuration'"
+Write-Host "  4. Push to trigger analysis: git push"
+Write-Host ""
+Write-Host "üí° Tips:" -ForegroundColor Magenta
+Write-Host "  - If a language isn't in your repo, CodeQL will skip it automatically"
+Write-Host "  - You can disable languages by commenting them out in the workflow matrix"
+Write-Host "  - Custom security queries can be added to the respective queries/ directories"
+Write-Host ""
\ No newline at end of file
diff --git a/setup_codeql.sh b/setup_codeql.sh
index 7fc6fd7e..9cf52551 100644
--- a/setup_codeql.sh
+++ b/setup_codeql.sh
@@ -1,101 +1,28 @@
 #!/bin/bash
 
-# CodeQL Configuration Auto-Update Script
-# This script safely updates CodeQL files while preserving existing structure
-# Compatible with Git Bash on Windows and Linux/Mac
-
-set -e  # Exit on any error
-
-# Colors for output
-RED='\033[0;31m'
-GREEN='\033[0;32m'
-YELLOW='\033[1;33m'
-BLUE='\033[0;34m'
-PURPLE='\033[0;35m'
-NC='\033[0m' # No Color
-
-# Script configuration
-SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
-GITHUB_DIR=".github"
-BACKUP_PREFIX="codeql-update"
-TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
-BACKUP_DIR="${GITHUB_DIR}/backups/${BACKUP_PREFIX}-${TIMESTAMP}"
-
-echo -e "${BLUE}üöÄ CodeQL Configuration Auto-Update Script${NC}"
-echo -e "${BLUE}================================================${NC}"
-echo ""
+# CodeQL Enhanced Security Configuration Deployment Script
+# Deploys complete CodeQL setup with support for JavaScript, Python, Go, and C/C++
 
-# Check if we're in the right directory
-if [[ ! -d ".git" ]]; then
-    echo -e "${RED}‚ùå Error: Not in a git repository root directory${NC}"
-    echo -e "${YELLOW}   Please run this script from your project root (where .git folder exists)${NC}"
-    exit 1
-fi
+set -e  # Exit on error
 
-# Check for existing .github directory
-if [[ ! -d "${GITHUB_DIR}" ]]; then
-    echo -e "${YELLOW}‚ö†Ô∏è  .github directory not found, creating it...${NC}"
-    mkdir -p "${GITHUB_DIR}"
-fi
+echo "üöÄ Starting CodeQL Enhanced Security Configuration Deployment..."
+echo "‚ö†Ô∏è  This will overwrite existing CodeQL configurations"
 
-echo -e "${PURPLE}üìÅ Current directory: $(pwd)${NC}"
-echo -e "${PURPLE}üìÅ GitHub directory: ${GITHUB_DIR}${NC}"
-echo ""
+# Base directory (relative to repository root)
+BASE_DIR=".github"
 
-# Function to create backup
-create_backup() {
-    echo -e "${BLUE}üíæ Creating backup...${NC}"
-    
-    # Create backup directory
-    mkdir -p "${BACKUP_DIR}"
-    
-    # Backup existing files if they exist
-    if [[ -d "${GITHUB_DIR}/workflows" ]]; then
-        cp -r "${GITHUB_DIR}/workflows" "${BACKUP_DIR}/" 2>/dev/null || true
-        echo -e "${GREEN}   ‚úÖ Backed up workflows directory${NC}"
-    fi
-    
-    if [[ -d "${GITHUB_DIR}/codeql" ]]; then
-        cp -r "${GITHUB_DIR}/codeql" "${BACKUP_DIR}/" 2>/dev/null || true
-        echo -e "${GREEN}   ‚úÖ Backed up codeql directory${NC}"
-    fi
-    
-    # Create backup info file
-    cat > "${BACKUP_DIR}/backup_info.txt" << EOF
-Backup created: $(date)
-Script version: Auto-Update v1.0
-Original location: $(pwd)
-Backed up from: ${GITHUB_DIR}
-
-Files backed up:
-$(find "${BACKUP_DIR}" -type f 2>/dev/null | sed 's|^|  - |' || echo "  - No files found")
-EOF
-    
-    echo -e "${GREEN}   ‚úÖ Backup created at: ${BACKUP_DIR}${NC}"
-    echo ""
-}
-
-# Function to create directory structure
-create_directories() {
-    echo -e "${BLUE}üìÅ Creating directory structure...${NC}"
-    
-    # Create required directories (using lowercase for Linux compatibility)
-    mkdir -p "${GITHUB_DIR}/workflows"
-    mkdir -p "${GITHUB_DIR}/codeql/config"
-    
-    # Keep existing additional directories (queries, tools, compliance) if they exist
-    # but ensure they're not interfering
-    
-    echo -e "${GREEN}   ‚úÖ Directory structure created${NC}"
-    echo ""
-}
-
-# Function to write workflow file
-write_workflow_file() {
-    local file="${GITHUB_DIR}/workflows/codeql.yml"
-    echo -e "${BLUE}üìù Writing workflow file: ${file}${NC}"
-    
-    cat > "${file}" << 'EOF'
+# Create directory structure
+echo "üìÅ Creating directory structure..."
+mkdir -p "$BASE_DIR/workflows"
+mkdir -p "$BASE_DIR/codeql/config"
+mkdir -p "$BASE_DIR/codeql/queries/javascript"
+mkdir -p "$BASE_DIR/codeql/queries/python"
+mkdir -p "$BASE_DIR/codeql/queries/go"
+mkdir -p "$BASE_DIR/codeql/queries/cpp"
+
+# ===== MAIN WORKFLOW =====
+echo "üìù Creating main CodeQL workflow..."
+cat > "$BASE_DIR/workflows/codeql.yml" << 'EOF'
 name: "CodeQL Security Analysis"
 
 on:
@@ -103,23 +30,15 @@ on:
     branches: ["main", "master", "develop"]
     paths-ignore:
       - '**/*.md'
-      - '**/*.txt'
       - 'docs/**'
   pull_request:
     branches: ["main", "master", "develop"]
     paths-ignore:
       - '**/*.md'
-      - '**/*.txt'
       - 'docs/**'
   schedule:
-    # Run at 3:14 AM UTC every Monday
     - cron: '14 3 * * 1'
   workflow_dispatch:
-    inputs:
-      languages:
-        description: 'Languages to analyze (comma-separated: javascript,python,java)'
-        required: false
-        default: 'javascript,python,java'
 
 permissions:
   contents: read
@@ -127,482 +46,255 @@ permissions:
   actions: read
 
 concurrency:
-  group: codeql-${{ github.ref }}-${{ github.workflow }}
+  group: codeql-${{ github.ref }}
   cancel-in-progress: true
 
-env:
-  # Fail fast on errors
-  CODEQL_EXTRACTOR_JAVA_HEAP_SIZE: 4096
-  CODEQL_EXTRACTOR_JAVA_MAX_HEAP: 8192
-
 jobs:
   analyze:
     name: Analyze (${{ matrix.language }})
     runs-on: ubuntu-latest
     timeout-minutes: 45
-    
+
     strategy:
       fail-fast: false
       matrix:
-        language: 
+        language:
           - javascript
-          - python  
-          - java
-        include:
-          - language: javascript
-            build-mode: none
-          - language: python
-            build-mode: none
-          - language: java
-            build-mode: autobuild
+          - python
+          - go
+          - cpp
 
     steps:
       - name: Checkout repository
         uses: actions/checkout@v4
-        with:
-          fetch-depth: 2
-          submodules: false
-
-      - name: Setup Java (Java analysis only)
-        if: matrix.language == 'java'
-        uses: actions/setup-java@v4
-        with:
-          distribution: 'temurin'
-          java-version: '17'
-          cache: 'maven'
-
-      - name: Setup Node.js (JavaScript analysis only)
-        if: matrix.language == 'javascript'
-        uses: actions/setup-node@v4
-        with:
-          node-version: '18'
-          cache: 'npm'
-          cache-dependency-path: '**/package-lock.json'
-
-      - name: Setup Python (Python analysis only)
-        if: matrix.language == 'python'
-        uses: actions/setup-python@v4
-        with:
-          python-version: '3.11'
-          cache: 'pip'
 
       - name: Initialize CodeQL
         uses: github/codeql-action/init@v3
         with:
           languages: ${{ matrix.language }}
           config-file: ./.github/codeql/config/${{ matrix.language }}.yml
-          # Use latest CodeQL bundle
-          tools: latest
-          # Disable default setup to use our explicit config
-          setup-python-dependencies: false
 
-      - name: Autobuild (compiled languages only)
-        if: matrix.build-mode == 'autobuild'
+      - name: Autobuild
         uses: github/codeql-action/autobuild@v3
 
       - name: Perform CodeQL Analysis
         uses: github/codeql-action/analyze@v3
         with:
           category: "/language:${{ matrix.language }}"
-          # Upload results even if there are errors in other languages
-          upload: true
-          # Add debugging for troubleshooting
-          ram: 6144
-          threads: 2
-
-      - name: Upload SARIF results (backup)
-        if: always()
-        uses: actions/upload-artifact@v4
-        with:
-          name: codeql-results-${{ matrix.language }}
-          path: /home/runner/work/_temp/codeql_databases/
-          retention-days: 30
 EOF
-    
-    echo -e "${GREEN}   ‚úÖ Workflow file written${NC}"
-}
-
-# Function to write JavaScript config
-write_javascript_config() {
-    local file="${GITHUB_DIR}/codeql/config/javascript.yml"
-    echo -e "${BLUE}üìù Writing JavaScript config: ${file}${NC}"
-    
-    cat > "${file}" << 'EOF'
+
+# ===== JAVASCRIPT CONFIG =====
+echo "üìù Creating JavaScript configuration..."
+cat > "$BASE_DIR/codeql/config/javascript.yml" << 'EOF'
 name: "CodeQL JavaScript Configuration"
 
-# Query suites to run
 queries:
   - uses: security-extended
   - uses: security-and-quality
 
-# Paths to include in analysis
 paths:
-  - "src"
-  - "app"
-  - "lib" 
-  - "services"
-  - "components"
-  - "pages"
-  - "utils"
-  - "helpers"
-  - "scripts"
-  # Include common JS/TS file extensions explicitly
   - "**/*.js"
-  - "**/*.jsx"  
+  - "**/*.jsx"
   - "**/*.ts"
   - "**/*.tsx"
   - "**/*.mjs"
-  - "**/*.cjs"
 
-# Paths to exclude from analysis  
 paths-ignore:
-  # Test directories
+  - "node_modules"
   - "test"
   - "tests"
-  - "__tests__"
   - "**/*.test.*"
   - "**/*.spec.*"
-  - "**/__tests__/**"
-  - "**/test/**"
-  - "**/tests/**"
-  # Build and dependency directories
-  - "node_modules"
-  - "dist"
-  - "build" 
-  - "out"
-  - ".next"
-  - ".nuxt"
-  - "coverage"
-  # Third-party and vendor code
-  - "vendor"
-  - "third_party"
-  - "external"
-  - "vendors"
-  # Generated files
-  - "**/*.generated.*"
   - "**/*.min.js"
-  - "**/*.bundle.js"
-  - "**/bundle.*"
-  # Configuration files that might contain code but aren't app logic
-  - "webpack.config.js"
-  - "rollup.config.js"
-  - "vite.config.js"
-  - ".eslintrc.js"
-  - "jest.config.js"
-  # Documentation
-  - "docs"
-  - "documentation"
-  - "*.md"
-
-# Disable default paths to use our explicit configuration
-disable-default-path-filters: true
+  - "dist"
+  - "build"
 
-# Additional extraction options
-extraction:
-  javascript:
-    # Extract dependencies for better analysis
-    externs: true
-    # Include TypeScript definition files
-    typescript: auto
+disable-default-path-filters: true
 EOF
-    
-    echo -e "${GREEN}   ‚úÖ JavaScript config written${NC}"
-}
-
-# Function to write Python config
-write_python_config() {
-    local file="${GITHUB_DIR}/codeql/config/python.yml"
-    echo -e "${BLUE}üìù Writing Python config: ${file}${NC}"
-    
-    cat > "${file}" << 'EOF'
+
+# ===== PYTHON CONFIG =====
+echo "üìù Creating Python configuration..."
+cat > "$BASE_DIR/codeql/config/python.yml" << 'EOF'
 name: "CodeQL Python Configuration"
 
-# Query suites to run
 queries:
-  - uses: security-extended  
+  - uses: security-extended
   - uses: security-and-quality
 
-# Paths to include in analysis
 paths:
-  - "src"
-  - "app" 
-  - "lib"
-  - "services"
-  - "modules"
-  - "packages"
-  - "scripts"
-  - "utils"
-  - "helpers"
-  - "api"
-  - "core"
-  # Include Python files explicitly
   - "**/*.py"
-  - "**/*.pyx"
-  - "**/*.pyi"
 
-# Paths to exclude from analysis
 paths-ignore:
-  # Test directories  
   - "test"
   - "tests"
-  - "__pycache__"
   - "**/*_test.py"
-  - "**/*_tests.py"
   - "**/test_*.py"
-  - "**/tests/**"
-  - "**/test/**"
-  # Virtual environments
   - "venv"
-  - "env"
   - ".venv"
-  - ".env"
-  - "virtualenv"
-  - "**/.venv/**"
-  - "**/venv/**"
-  # Build and distribution directories
-  - "build"
-  - "dist"
-  - "*.egg-info"
   - "__pycache__"
-  - "**/__pycache__/**"
-  - "*.pyc"
-  - "*.pyo"
-  # Third-party code
-  - "vendor"
-  - "third_party"
-  - "external"
-  - "site-packages"
-  - "**/site-packages/**"
-  # Generated files
-  - "**/*.generated.*" 
-  # Migration files (often auto-generated)
-  - "**/migrations/**"
-  - "**/alembic/versions/**"
-  # Documentation
-  - "docs"
-  - "documentation"
-  - "*.md"
-
-# Disable default paths to use our explicit configuration  
+  - "**/*.egg-info"
+
 disable-default-path-filters: true
+EOF
+
+# ===== GO CONFIG =====
+echo "üìù Creating Go configuration..."
+cat > "$BASE_DIR/codeql/config/go.yml" << 'EOF'
+name: "CodeQL Go Configuration"
+
+queries:
+  - uses: security-extended
+  - uses: security-and-quality
+
+paths:
+  - "**/*.go"
+
+paths-ignore:
+  - "vendor"
+  - "**/*_test.go"
+  - "**/*.pb.go"
 
-# Python-specific extraction options
-extraction:
-  python:
-    # Include requirements files for dependency analysis
-    setup_py: true
-    requirements_txt: true
-    # Handle different Python versions
-    python2: false
-    python3: true
+disable-default-path-filters: true
 EOF
-    
-    echo -e "${GREEN}   ‚úÖ Python config written${NC}"
-}
-
-# Function to write Java config
-write_java_config() {
-    local file="${GITHUB_DIR}/codeql/config/java.yml"
-    echo -e "${BLUE}üìù Writing Java config: ${file}${NC}"
-    
-    cat > "${file}" << 'EOF'
-name: "CodeQL Java Configuration"
-
-# Query suites to run
+
+# ===== C/C++ CONFIG =====
+echo "üìù Creating C/C++ configuration..."
+cat > "$BASE_DIR/codeql/config/cpp.yml" << 'EOF'
+name: "CodeQL C/C++ Configuration"
+
 queries:
   - uses: security-extended
   - uses: security-and-quality
 
-# Paths to include in analysis
 paths:
-  - "src/main/java"
-  - "src"
-  - "app/src/main/java" 
-  - "lib"
-  - "services"
-  - "modules"
-  # Include Java files explicitly
-  - "**/*.java"
-  - "**/*.kt" 
-  - "**/*.kts"
-
-# Paths to exclude from analysis
+  - "**/*.c"
+  - "**/*.cpp"
+  - "**/*.cc"
+  - "**/*.cxx"
+  - "**/*.h"
+  - "**/*.hpp"
+
 paths-ignore:
-  # Test directories
-  - "src/test"
-  - "src/test/java"
-  - "test"
-  - "tests"
-  - "**/src/test/**"
-  - "**/*Test.java"
-  - "**/*Tests.java"
-  - "**/Test*.java"
-  # Build directories
-  - "target"
   - "build"
-  - "out"
-  - "**/target/**"
-  - "**/build/**"
-  - "**/out/**"
-  # Gradle/Maven wrapper and configs
-  - ".gradle"
-  - ".mvn"
-  - "gradlew"
-  - "gradlew.bat"  
-  - "mvnw"
-  - "mvnw.cmd"
-  # Generated sources
-  - "**/generated/**"
-  - "**/generated-sources/**"
-  - "**/generated-test-sources/**"
-  - "**/*.generated.*"
-  # Third-party dependencies
   - "vendor"
   - "third_party"
-  - "external"
-  - "lib/external"
-  # IDE files
-  - ".idea"
-  - "*.iml"
-  - ".eclipse"
-  - ".vscode"
-  # Documentation
-  - "docs"
-  - "documentation"
-  - "*.md"
-
-# Disable default paths to use our explicit configuration
+  - "**/*.generated.*"
+
 disable-default-path-filters: true
+EOF
+
+# ===== NO-OP QUERIES (Required for custom query dirs) =====
+echo "üìù Creating placeholder queries..."
+
+# JavaScript no-op query
+cat > "$BASE_DIR/codeql/queries/javascript/noop.ql" << 'EOF'
+import javascript
+from Expr e
+where false
+select e, "No-op test query."
+EOF
+
+# JavaScript query suite
+cat > "$BASE_DIR/codeql/queries/javascript/javascript-custom.qls" << 'EOF'
+- queries:
+  - noop.ql
+EOF
+
+# Python no-op query
+cat > "$BASE_DIR/codeql/queries/python/noop.ql" << 'EOF'
+import python
+from Expr e
+where false
+select e, "No-op test query."
+EOF
+
+# Python query suite
+cat > "$BASE_DIR/codeql/queries/python/python-custom.qls" << 'EOF'
+- queries:
+  - noop.ql
+EOF
+
+# Go no-op query
+cat > "$BASE_DIR/codeql/queries/go/noop.ql" << 'EOF'
+import go
+from Expr e
+where false
+select e, "No-op test query."
+EOF
+
+# Go query suite
+cat > "$BASE_DIR/codeql/queries/go/go-custom.qls" << 'EOF'
+- queries:
+  - noop.ql
+EOF
+
+# C++ no-op query
+cat > "$BASE_DIR/codeql/queries/cpp/noop.ql" << 'EOF'
+import cpp
+from Expr e
+where false
+select e, "No-op test query."
+EOF
+
+# C++ query suite
+cat > "$BASE_DIR/codeql/queries/cpp/cpp-custom.qls" << 'EOF'
+- queries:
+  - noop.ql
+EOF
 
-# Java-specific extraction options  
-extraction:
-  java:
-    # Maven settings
-    maven:
-      # Use Maven wrapper if available
-      wrapper: true
-      # Maven goals for compilation
-      goals: ["compile", "test-compile"]
-    # Gradle settings  
-    gradle:
-      # Use Gradle wrapper if available
-      wrapper: true
-      # Gradle tasks for compilation  
-      tasks: ["compileJava", "compileTestJava"]
-    # JDK version compatibility
-    jdk: "17"
+# ===== OPTIONAL: Keep existing Dependabot if not present =====
+if [ ! -f "$BASE_DIR/dependabot.yml" ]; then
+  echo "üìù Creating Dependabot configuration..."
+  cat > "$BASE_DIR/dependabot.yml" << 'EOF'
+version: 2
+updates:
+  - package-ecosystem: "pip"
+    directory: "/"
+    schedule:
+      interval: "weekly"
+
+  - package-ecosystem: "npm"
+    directory: "/"
+    schedule:
+      interval: "weekly"
+
+  - package-ecosystem: "gomod"
+    directory: "/"
+    schedule:
+      interval: "weekly"
+
+  - package-ecosystem: "github-actions"
+    directory: "/"
+    schedule:
+      interval: "weekly"
 EOF
-    
-    echo -e "${GREEN}   ‚úÖ Java config written${NC}"
-}
-
-# Function to verify files
-verify_files() {
-    echo -e "${BLUE}üîç Verifying created files...${NC}"
-    
-    local files=(
-        "${GITHUB_DIR}/workflows/codeql.yml"
-        "${GITHUB_DIR}/codeql/config/javascript.yml"
-        "${GITHUB_DIR}/codeql/config/python.yml"
-        "${GITHUB_DIR}/codeql/config/java.yml"
-    )
-    
-    local all_good=true
-    
-    for file in "${files[@]}"; do
-        if [[ -f "$file" ]] && [[ -s "$file" ]]; then
-            echo -e "${GREEN}   ‚úÖ $file exists and is not empty${NC}"
-        else
-            echo -e "${RED}   ‚ùå $file is missing or empty${NC}"
-            all_good=false
-        fi
-    done
-    
-    if [[ "$all_good" == true ]]; then
-        echo -e "${GREEN}   üéâ All files verified successfully!${NC}"
-    else
-        echo -e "${RED}   ‚ùå Some files are missing or empty${NC}"
-        return 1
-    fi
-}
-
-# Function to show final summary
-show_summary() {
-    echo ""
-    echo -e "${BLUE}üìä Update Summary${NC}"
-    echo -e "${BLUE}=================${NC}"
-    echo -e "${GREEN}‚úÖ Backup created: ${BACKUP_DIR}${NC}"
-    echo -e "${GREEN}‚úÖ Workflow updated: ${GITHUB_DIR}/workflows/codeql.yml${NC}"
-    echo -e "${GREEN}‚úÖ JavaScript config: ${GITHUB_DIR}/codeql/config/javascript.yml${NC}"
-    echo -e "${GREEN}‚úÖ Python config: ${GITHUB_DIR}/codeql/config/python.yml${NC}"
-    echo -e "${GREEN}‚úÖ Java config: ${GITHUB_DIR}/codeql/config/java.yml${NC}"
-    echo ""
-    echo -e "${PURPLE}üóÇÔ∏è  Your existing files preserved:${NC}"
-    if [[ -f "${GITHUB_DIR}/codeql/queries/javascript/javascript-custom.qls" ]]; then
-        echo -e "${YELLOW}   üìÑ Custom JavaScript queries suite preserved${NC}"
-    fi
-    if [[ -f "${GITHUB_DIR}/codeql/queries/python/python-custom.qls" ]]; then
-        echo -e "${YELLOW}   üìÑ Custom Python queries suite preserved${NC}"
-    fi
-    if [[ -f "${GITHUB_DIR}/codeql/tools/sarif_summary.py" ]]; then
-        echo -e "${YELLOW}   üõ†Ô∏è  SARIF summary tool preserved${NC}"
-    fi
-    if [[ -f "${GITHUB_DIR}/codeql/compliance/cwe_to_owasp.csv" ]]; then
-        echo -e "${YELLOW}   üìã CWE to OWASP mapping preserved${NC}"
-    fi
-    echo ""
-    echo -e "${BLUE}üöÄ Next Steps:${NC}"
-    echo -e "${PURPLE}   1. Review the changes: git diff${NC}"
-    echo -e "${PURPLE}   2. Add files: git add .github${NC}"
-    echo -e "${PURPLE}   3. Commit: git commit -m 'Update CodeQL configuration with bulletproof setup'${NC}"
-    echo -e "${PURPLE}   4. Push: git push${NC}"
-    echo ""
-    echo -e "${GREEN}üéâ CodeQL configuration updated successfully!${NC}"
-}
-
-# Function to handle script interruption
-cleanup() {
-    echo ""
-    echo -e "${YELLOW}‚ö†Ô∏è  Script interrupted. Changes may be incomplete.${NC}"
-    echo -e "${YELLOW}   Backup available at: ${BACKUP_DIR}${NC}"
-    exit 1
-}
-
-# Set up interrupt handler
-trap cleanup INT TERM
-
-# Main execution
-main() {
-    echo -e "${PURPLE}üîß Starting CodeQL configuration update...${NC}"
-    echo ""
-    
-    # Show current structure
-    echo -e "${BLUE}üìã Current .github structure:${NC}"
-    if command -v tree &> /dev/null; then
-        tree "${GITHUB_DIR}" -a 2>/dev/null || find "${GITHUB_DIR}" -type f 2>/dev/null | sort | sed 's|^|   |'
-    else
-        find "${GITHUB_DIR}" -type f 2>/dev/null | sort | sed 's|^|   |'
-    fi
-    echo ""
-    
-    # Create backup
-    create_backup
-    
-    # Create directory structure
-    create_directories
-    
-    # Write all configuration files
-    write_workflow_file
-    write_javascript_config
-    write_python_config
-    write_java_config
-    
-    # Verify everything was created correctly
-    verify_files
-    
-    # Show summary
-    show_summary
-}
-
-# Run main function
-main "$@"
\ No newline at end of file
+fi
+
+# ===== VERIFICATION =====
+echo ""
+echo "‚úÖ CodeQL Enhanced Security Configuration deployed successfully!"
+echo ""
+echo "üìã Created/Updated files:"
+echo "  - $BASE_DIR/workflows/codeql.yml"
+echo "  - $BASE_DIR/codeql/config/javascript.yml"
+echo "  - $BASE_DIR/codeql/config/python.yml"
+echo "  - $BASE_DIR/codeql/config/go.yml"
+echo "  - $BASE_DIR/codeql/config/cpp.yml"
+echo "  - Query files for all languages"
+echo ""
+echo "üîç Configured languages:"
+echo "  - JavaScript/TypeScript"
+echo "  - Python"
+echo "  - Go"
+echo "  - C/C++"
+echo ""
+echo "üìå Next steps:"
+echo "  1. Review the configurations"
+echo "  2. Commit changes: git add .github/ && git commit -m 'Enhanced CodeQL security configuration'"
+echo "  3. Push to trigger analysis: git push"
+echo ""
+echo "üí° Tips:"
+echo "  - If a language isn't in your repo, CodeQL will skip it automatically"
+echo "  - You can disable languages by commenting them out in the workflow matrix"
+echo "  - Custom security queries can be added to the respective queries/ directories"
+echo ""
\ No newline at end of file
-- 
2.51.0.windows.1


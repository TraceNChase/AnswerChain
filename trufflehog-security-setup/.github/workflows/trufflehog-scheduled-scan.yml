name: TruffleHog Scheduled Scan

on:
  schedule:
    - cron: '0 0 * * 0'  # Every Sunday at midnight
  workflow_dispatch:

jobs:
  scan:
    name: Full Repository Secret Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get all commits

      - name: Install TruffleHog
        run: |
          curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
          trufflehog --version

      - name: Run comprehensive scan
        id: scan
        run: |
          mkdir -p trufflehog-results
          
          # Run full repository scan
          trufflehog git file://. \
            --no-update \
            --json > trufflehog-results/full-scan.json
          
          # Also save SARIF format
          trufflehog git file://. \
            --no-update \
            --sarif > trufflehog-results/full-scan.sarif
          
          # Check if any secrets were found
          if [ -s trufflehog-results/full-scan.json ]; then
            echo "SECRETS_FOUND=true" >> $GITHUB_OUTPUT
            
            # Count findings
            FINDINGS=$(jq '. | length' trufflehog-results/full-scan.json)
            echo "FINDINGS_COUNT=$FINDINGS" >> $GITHUB_OUTPUT
            
            # Generate HTML report
            echo "<html><head><title>TruffleHog Secret Scan Results</title>" > trufflehog-results/report.html
            echo "<style>body{font-family:sans-serif;max-width:1200px;margin:0 auto;padding:20px}h1{color:#d9534f}table{width:100%;border-collapse:collapse}th{background:#f8f9fa;text-align:left;padding:8px}td{padding:8px;border-top:1px solid #dee2e6}tr:nth-child(even){background:#f8f9fa}.secret{color:#d9534f;font-weight:bold}</style>" >> trufflehog-results/report.html
            echo "</head><body>" >> trufflehog-results/report.html
            echo "<h1>TruffleHog Secret Scan Results</h1>" >> trufflehog-results/report.html
            echo "<p>Scan date: $(date)</p>" >> trufflehog-results/report.html
            echo "<p>Total findings: $FINDINGS</p>" >> trufflehog-results/report.html
            echo "<table><thead><tr><th>Secret Type</th><th>File</th><th>Line</th><th>Commit</th><th>Author</th></tr></thead><tbody>" >> trufflehog-results/report.html
            
            cat trufflehog-results/full-scan.json | jq -r '.[] | "<tr><td class=\"secret\">\(.DetectorType)</td><td>\(.SourceMetadata.Data.Filesystem.file)</td><td>\(.SourceMetadata.Data.Filesystem.line_number)</td><td>\(.SourceMetadata.Data.Git.commit)</td><td>\(.SourceMetadata.Data.Git.email)</td></tr>"' >> trufflehog-results/report.html
            
            echo "</tbody></table></body></html>" >> trufflehog-results/report.html
          else
            echo "SECRETS_FOUND=false" >> $GITHUB_OUTPUT
            echo "FINDINGS_COUNT=0" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: steps.scan.outputs.SECRETS_FOUND == 'true'
        with:
          sarif_file: trufflehog-results/full-scan.sarif
          category: trufflehog-scheduled

      - name: Upload HTML report
        uses: actions/upload-artifact@v3
        if: steps.scan.outputs.SECRETS_FOUND == 'true'
        with:
          name: trufflehog-secret-report
          path: trufflehog-results/report.html
          retention-days: 90

      - name: Create issue if secrets found
        uses: actions/github-script@v6
        if: steps.scan.outputs.SECRETS_FOUND == 'true'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            
            // Create issue title with finding count
            const findingsCount = process.env.FINDINGS_COUNT;
            const issueTitle = `ðŸš¨ TruffleHog detected ${findingsCount} potential secrets`;
            
            // Create issue body
            let issueBody = `## TruffleHog Secret Scan Results\n\n`;
            issueBody += `The scheduled TruffleHog scan has detected ${findingsCount} potential secrets in the repository.\n\n`;
            issueBody += `### Next Steps\n\n`;
            issueBody += `1. Download the HTML report from the GitHub Actions artifacts\n`;
            issueBody += `2. Review each finding to confirm if it's an actual secret\n`;
            issueBody += `3. Remove any genuine secrets from the repository\n`;
            issueBody += `4. Rotate any exposed credentials immediately\n`;
            issueBody += `5. Consider implementing secret scanning in your CI/CD pipeline\n\n`;
            issueBody += `> View the full scan details in the [Actions tab](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;
            
            // Create the issue
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              labels: ['security', 'secret-exposure']
            });

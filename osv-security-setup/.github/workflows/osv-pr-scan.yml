name: OSV PR Vulnerability Check

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - '**/*.lock'
      - '**/go.mod'
      - '**/go.sum'
      - '**/package.json'
      - '**/package-lock.json'
      - '**/requirements.txt'
      - '**/poetry.lock'
      - '**/Cargo.lock'
      - '**/Gemfile.lock'
      - '**/*.gradle'
      - '**/*.gradle.kts'
      - '**/pom.xml'

jobs:
  scan:
    name: PR Dependency Vulnerability Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install OSV Scanner
        run: |
          go install github.com/google/osv-scanner/cmd/osv-scanner@latest
          osv-scanner --version

      - name: Run OSV Scanner on PR
        id: scan
        run: |
          osv-scanner --format json --recursive --config osv-security-setup/configs/osv-scanner.toml . > osv-pr-results.json
        continue-on-error: true

      - name: Process scan results
        id: process-results
        if: always()
        run: |
          # Check if results file exists and has vulnerabilities
          if [ -f osv-pr-results.json ] && [ "$(jq '.results | length' osv-pr-results.json)" -gt 0 ]; then
            echo "FOUND_VULNS=true" >> $GITHUB_OUTPUT
            
            # Create markdown report for PR comment
            echo "## 🛡️ OSV Scanner Results" > osv-pr-report.md
            echo "" >> osv-pr-report.md
            
            # Count vulnerabilities by severity
            critical=$(jq '[.results[].packages[].vulnerabilities[] | select(.severity == "CRITICAL")] | length' osv-pr-results.json)
            high=$(jq '[.results[].packages[].vulnerabilities[] | select(.severity == "HIGH")] | length' osv-pr-results.json)
            medium=$(jq '[.results[].packages[].vulnerabilities[] | select(.severity == "MEDIUM")] | length' osv-pr-results.json)
            low=$(jq '[.results[].packages[].vulnerabilities[] | select(.severity == "LOW")] | length' osv-pr-results.json)
            
            echo "### Summary" >> osv-pr-report.md
            echo "" >> osv-pr-report.md
            echo "| Severity | Count |" >> osv-pr-report.md
            echo "|----------|-------|" >> osv-pr-report.md
            echo "| 🔴 Critical | $critical |" >> osv-pr-report.md
            echo "| 🟠 High | $high |" >> osv-pr-report.md
            echo "| 🟡 Medium | $medium |" >> osv-pr-report.md
            echo "| 🟢 Low | $low |" >> osv-pr-report.md
            echo "" >> osv-pr-report.md
            
            # Add details for high and critical vulnerabilities
            echo "### Critical & High Vulnerabilities" >> osv-pr-report.md
            echo "" >> osv-pr-report.md
            
            jq -r '.results[].packages[] | select(.vulnerabilities[] | select(.severity == "CRITICAL" or .severity == "HIGH")) | "#### Package: \(.package.name) \(.package.version)\n\n" + (.vulnerabilities[] | select(.severity == "CRITICAL" or .severity == "HIGH") | "- **[\(.id)](\(.database_specific.url // "https://osv.dev/vulnerability/\(.id)"))**\n  - Severity: \(.severity // "Unknown")\n  - Summary: \(.summary // "No summary available")\n\n")' osv-pr-results.json >> osv-pr-report.md
            
            echo "For full details, please see the scan results in the Actions tab." >> osv-pr-report.md
          else
            echo "FOUND_VULNS=false" >> $GITHUB_OUTPUT
            
            echo "## ✅ OSV Scanner Results" > osv-pr-report.md
            echo "" >> osv-pr-report.md
            echo "No vulnerabilities found in the dependencies modified by this PR." >> osv-pr-report.md
          fi

      - name: Comment on PR
        uses: actions/github-script@v6
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const reportContent = fs.readFileSync('osv-pr-report.md', 'utf8');
            
            const issueNumber = context.issue.number;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: reportContent
            });
            
            // Add label if vulnerabilities found
            if ('${{ steps.process-results.outputs.FOUND_VULNS }}' === 'true') {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: ['security-review-needed']
              });
            }
